!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
helloWorld	main.lua	/^function helloWorld()$/;"	f
love.draw	main.lua	/^function love.draw()$/;"	f
love.keypressed	main.lua	/^function love.keypressed(key)$/;"	f
love.load	main.lua	/^function love.load()$/;"	f
love.update	main.lua	/^function love.update(dt)$/;"	f
push:addCanvas	push.lua	/^function push:addCanvas(params)$/;"	f
push:apply	push.lua	/^function push:apply(operation, shader)$/;"	f
push:applySettings	push.lua	/^function push:applySettings(settings)$/;"	f
push:applyShaders	push.lua	/^function push:applyShaders(canvas, shaders)$/;"	f
push:finish	push.lua	/^function push:finish(shader)$/;"	f
push:getCanvasTable	push.lua	/^function push:getCanvasTable(name)$/;"	f
push:getDimensions	push.lua	/^function push:getDimensions() return self._WWIDTH, self._WHEIGHT end$/;"	f
push:getHeight	push.lua	/^function push:getHeight() return self._WHEIGHT end$/;"	f
push:getWidth	push.lua	/^function push:getWidth() return self._WWIDTH end$/;"	f
push:initValues	push.lua	/^function push:initValues()$/;"	f
push:resetSettings	push.lua	/^function push:resetSettings() return self:applySettings(self.defaults) end$/;"	f
push:resize	push.lua	/^function push:resize(w, h)$/;"	f
push:setBorderColor	push.lua	/^function push:setBorderColor(color, g, b)$/;"	f
push:setCanvas	push.lua	/^function push:setCanvas(name)$/;"	f
push:setShader	push.lua	/^function push:setShader(name, shader)$/;"	f
push:setupCanvas	push.lua	/^function push:setupCanvas(canvases)$/;"	f
push:setupScreen	push.lua	/^function push:setupScreen(WWIDTH, WHEIGHT, RWIDTH, RHEIGHT, settings)$/;"	f
push:start	push.lua	/^function push:start()$/;"	f
push:switchFullscreen	push.lua	/^function push:switchFullscreen(winw, winh)$/;"	f
push:toGame	push.lua	/^function push:toGame(x, y)$/;"	f
push:toReal	push.lua	/^function push:toReal(x, y)$/;"	f
s:l	Session.vim	/^let s:l = 3 - ((2 * winheight(0) + 10) \/ 20)$/;"	v
s:l	Session.vim	/^let s:l = 68 - ((14 * winheight(0) + 20) \/ 41)$/;"	v
s:l	Session.vim	/^let s:l = 8 - ((3 * winheight(0) + 10) \/ 20)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
windowUpdateMode	push.lua	/^local windowUpdateMode = love11 and love.window.updateMode or function(width, height, settings)$/;"	f
